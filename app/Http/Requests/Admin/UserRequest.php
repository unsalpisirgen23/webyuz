<?php

namespace App\Http\Requests\Admin;


use App\Http\Requests\BaseRequest;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Storage;

class UserRequest extends BaseRequest
{

    protected $user;

    public function authorize()
    {
        return parent::authorize(); // TODO: Change the autogenerated stub
    }

    public function postUser($id = "")
    {
        $this->user = $this->post();
        unset($this->user['_token']);
        $this->user["created_at"] = date('Y-m-d H:i:s');
        $this->user["updated_at"] = date('Y-m-d H:i:s');
        if ($this->user["password"] == "")
        {
            $user =  DB::table("users")->where("id","=",$id)->first();
            $this->user["password"] = $user->password;
        }
        else{
            $this->user["password"] =  Hash::make($this->user["password"]);
        }

        if ($this->user['profile_image'] == "") {
                $user2 =  DB::table("users")->where("id","=",$id)->first();
                if (isset($user2->profile_image))
                {
                    $this->user["profile_image"] = $user2->profile_image;
                }
        }
        return $this->user;
    }

    public function postUserUpdate($id = "")
    {
        $this->user = $this->post();
        unset($this->user['_token']);
        $this->user["updated_at"] = date('Y-m-d H:i:s');
        if ($this->user["password"] == "")
        {
            $user =  DB::table("users")->where("id","=",$id)->first();
            $this->user["password"] = $user->password;
        }
        else{
            $this->user["password"] =  Hash::make($this->user["password"]);
        }

        if ($this->user['profile_image'] == "") {
                $user2 =  DB::table("users")->where("id","=",$id)->first();
                if (isset($user2->profile_image))
                {
                    $this->user["profile_image"] = $user2->profile_image;
                }
        }
        return $this->user;
    }



    public function getEmail()
    {
        return $this->user["email"];
    }

    public function allUser()
    {
        $this->user = $this->all();
        unset($this->user['_token']);
        return $this->user;
    }

    public function rules()
    {
        parent::rules();
        return [
            'name'=>"required|max:200|min:2",
            'username'=>"required",
            'email'=>"required"
        ];
    }
}
